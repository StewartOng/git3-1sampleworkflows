name: Terraform Destroy

# Triggered manually via the "Run workflow" button
on:
  workflow_dispatch:  # Manual trigger option
    inputs:
      confirm_destroy:
        description: 'Confirm destruction of resources'
        required: true
        default: 'false'

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Make sure this matches the region used in your resources

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.6'  # Adjust to the version you want to use

      # Initialize Terraform (to set up backend and providers)
      - name: Terraform Init
        run: terraform init

      # Run Terraform Plan (optional but good practice to see what will be destroyed)
      - name: Terraform Plan (Destroy)
        run: terraform plan -destroy -out=tfplan

      # Confirm destruction before proceeding
      - name: Confirm Destruction
        run: |
          if [[ "${{ github.event.inputs.confirm_destroy }}" != "true" ]]; then
            echo "Aborting the destroy process. Set 'confirm_destroy' to 'true' to proceed."
            exit 1
          fi

      # Run Terraform Destroy to destroy the resources
      - name: Terraform Destroy
        run: terraform apply "tfplan"

      # Optional: Output the Terraform Destroy logs
      - name: Output Terraform Destroy Logs
        run: terraform show -no-color tfplan